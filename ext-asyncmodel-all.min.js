Ext.define("Ext.ux.AsyncModel.Texts",{alternateClassName:"AsyncModelTexts",singleton:!0,requiredFieldMessageTpl:"{fieldName} is a required field",desiredFieldMessageTpl:"{fieldName} is a desired field",invalidValue:"Value is invalid",minLengthViolatedTpl:"{fieldName} cannot be less than {minLength} characters",maxLengthViolatedTpl:"{fieldName} cannot be more than {maxLength} characters",minMaxLengthViolatedTpl:"{fieldName} must be minimum of {minLength} and maximum of {maxLength} characters",onlyUpperCaseAllowed:"Only upper case is allowed",onlyLowerCaseAllowed:"Only lower case is allowed",forbiddenSymbols:"Value contains forbidden symbols",onlyUpperCaseAllowedTpl:"Only upper case is allowed",onlyLowerCaseAllowedTpl:"Only lower case is allowed",onlyMixedCaseAllowedTpl:"{fieldName} must contain lowercase and uppercase letters",requireLetterTpl:"{fieldName} must contain at least one letter",requireDigitTpl:"{fieldName} must contain at least one digit",storeUniqueTpl:"Record with same {fieldName} already added",incorrectEmail:"Specified e-mail is incorrect"});Ext.override(Ext.form.TextField,{afterRender:function(){var n=this;n.callParent(arguments);n.subscribeFilterKeysAfterRender&&(n.mon(n.inputEl,"keypress",n.filterKeys,n),n.subscribeFilterKeysAfterRender=!1)},setMaskRe:function(n){var t=this,i=t.maskRe;t.maskRe=n;i&&!t.maskRe?t.inputEl?t.mun(t.inputEl,"keypress",t.filterKeys,t):t.subscribeFilterKeysAfterRender=!1:!i&&t.maskRe&&(t.inputEl?t.mon(t.inputEl,"keypress",t.filterKeys,t):t.subscribeFilterKeysAfterRender=!0)},setMaxLength:function(n){var t=this,i=n!==null&&n!==undefined&&n>=0;i?(t.maxLength=n,t.enforceMaxLength=!0,t.inputEl&&t.inputEl.dom&&(t.inputEl.dom.maxLength=n!==Number.MAX_VALUE?n:undefined)):t.maxLength&&t.maxLength!==Number.MAX_VALUE&&(t.maxLength=Number.MAX_VALUE,t.enforceMaxLength=!1,t.inputEl&&t.inputEl.dom&&(t.inputEl.dom.maxLength=524288))}});Ext.override(Ext.data.validator.Format,{validate:function(n){var t=this;return arguments[0]=n&&t.validateTrimmed?Ext.String.trim(n):n,t.ignoreEmpty&&Ext.isEmpty(n)?!0:t.callParent(arguments)}});Ext.override(Ext.data.field.Field,{isEqual:function(n,t){var i=this;return Ext.isArray(n)&&Ext.isArray(t)?Ext.Array.equals(n,t):i.callParent(arguments)}});Ext.define("Ext.ux.data.validator.Context",{alternateClassName:"ValidationContext",statics:{getFieldDisplayName:function(n,t){var i=this;return n.getMetaValue(i.getFieldName(),"displayName")||t},create:function(n,t,i){var r={fieldName:this.getFieldDisplayName(record,t)};return i&&Ext.apply(r,i),r}}});Ext.define("Ext.ux.data.validator.Registry",{alternateClassName:"ValidatorRegistry",singleton:!0,constructor:function(){this._data={}},register:function(n,t,i,r){var u=this,f;Ext.isObject(n)&&(t=n.validator,i=n.validator,r=n.aliases,n=n.fieldAttributeNames);n||Ext.Error.raise("'fieldAttributeNames' not specified");n=Ext.Array.from(n);f=u.createRegistryRecord(t,i,n);Ext.Array.each(n,function(n){u._data[n]&&Ext.Error.raise("Validator for '"+n+"' has been already registered");u._data[n]=f})},getData:function(n){var i=this,t={};return Ext.Object.each(i._data,function(n,i){if(!t[n]){var r={validator:i.validator,activator:i.activator};Ext.Array.each(i.aliases,function(n){t[n]=r})}}),n&&Ext.Object.each(n,function(n,r){var u=i.createRegistryRecord(r.validator,r.activator,[n]);t[n]={validator:u.validator,activator:u.activator}}),t},createRegistryRecord:function(n,t,i){var r=this;return n||Ext.Error.raise("'validator' not specified"),t=t||r.defaultActivationRule,{aliases:i,validator:n,activator:t}},defaultActivationRule:function(n,t,i){var u=n.getMetaDataNames(t),r;return Ext.Array.contains(u,i)?!!n.getMetaValue(t,i):(r=n.getFieldDescriptor(t),!!r[i])}});Ext.define("Ext.ux.data.validator.AsyncValidator",{mixins:["Ext.mixin.Factoryable"],alias:"data.async.validator.base",isAsyncValidator:!0,type:"base",config:{fieldName:""},statics:{all:{},register:function(n,t){var i=this.all;i[n.toUpperCase()]=i[n.toLowerCase()]=i[n]=t.prototype}},onClassExtended:function(n,t){t.type&&Ext.data.validator.AsyncValidator.register(t.type,n)},constructor:function(n){typeof n=="function"?(this.fnOnly=!0,this.validate=n):this.initConfig(n)},validate:function(n,t,i,r){Ext.callback(r,null,["",""])},getValidationContext:function(){var n=this;return ValidationContext.create(modelRecord,n.getFieldName())}},function(){this.register(this.prototype.type,this)});Ext.define("Ext.ux.data.validator.ParametrizedValidator",{extend:"Ext.data.validator.Validator",alias:"data.validator.baseparametrizedvalidator",config:{fieldName:"",infoMessage:"",errorMessageTpl:AsyncModelTexts.invalidValue},applyInfoMessageTpl:function(n){return new Ext.XTemplate(n)},applyErrorMessageTpl:function(n){return new Ext.XTemplate(n)},validate:function(){var n=this;return n.isValid()?!0:Ext.String.format(n.getErrorMessageTpl(),n.getFieldDisplayName())},validateWithOptions:function(n,t){var i=this,r=i.validate(n,t),u="";return r!==!0&&(u=Ext.isString(r)&&r?r:i.getErrorMessageTpl().apply(i.getValidationContext(t))),{errorMessage:u,infoMessage:i.getInfoMessage()}},isValid:function(){return!0},getValidationContext:function(){var n=this;return ValidationContext.create(modelRecord,n.getFieldName())},statics:{decorateStandard:function(n){n.validateWithOptions||(n.validateWithOptions=this.validateWithOptions)},validateWithOptions:function(n,t){var r=this,i=r.validate(n,t),u="";return i!==!0&&(u=Ext.isString(i)&&i?i:r.defaultErrorMessage||AsyncModelTexts.invalidValue),{errorMessage:u,infoMessage:""}}}});Ext.define("Ext.ux.data.validator.DynamicLength",{extend:"Ext.data.validator.Length",alias:"data.validator.dynamiclength",type:"dynamiclength",config:{trimStrings:!0,fieldName:"",minOnlyMessageTpl:AsyncModelTexts.minLengthViolatedTpl,maxOnlyMessageTpl:AsyncModelTexts.maxLengthViolatedTpl,bothMessageTpl:AsyncModelTexts.minMaxLengthViolatedTpl},applyMinOnlyMessageTpl:function(n){return new Ext.XTemplate(n)},applyMaxOnlyMessageTpl:function(n){return new Ext.XTemplate(n)},applyBothMessageTpl:function(n){return new Ext.XTemplate(n)},validateValue:function(){var n=this;return!0},validate:function(n,t){var i=this;return n instanceof Ext.data.Model?!0:(n=i.prepareFieldValue(n),i.ignoreEmpty&&Ext.isEmpty(n))?!0:(arguments[0]=n,i.updateConfiguration(t),i.callParent(arguments))},prepareFieldValue:function(n){var i=this,t;return n instanceof Ext.data.Store?n:(t=String(n),i.getTrimStrings()&&(t=Ext.String.trim(t)),t)},getValue:function(n){var t=this;return n instanceof Ext.data.Store?n.count():n.length},getValidationContext:function(n){var i=this,t=i.getFieldName();return ValidationContext.create(n,t,{minLength:n.getMetaValue(t,"minLength"),maxLength:n.getMetaValue(t,"maxLength")})},updateConfiguration:function(n){var i=this,t=i.getValidationContext(n);i.setConfig({minOnlyMessage:i.getMinOnlyMessageTpl().apply(t),maxOnlyMessage:i.getMaxOnlyMessageTpl().apply(t),bothMessage:i.getBothMessageTpl().apply(t),min:t.minLength===null?undefined:t.minLength,max:t.maxLength===null?undefined:t.maxLength})}});ValidatorRegistry.register(["minLength","maxLength"],function(n){return{type:"dynamiclength",minOnlyMessageTpl:n.minLengthMessageTpl,maxOnlyMessageTpl:n.maxLengthMessageTpl,bothMessageTpl:n.minMaxLengthMessageTpl,fieldName:n.name,trimStrings:n.validateTrimmed,ignoreEmpty:!0}});Ext.define("Ext.ux.data.validator.Required",{extend:"Ext.ux.data.validator.ParametrizedValidator",alias:"data.validator.required",type:"required",config:{trimStrings:!0,errorMessageTpl:AsyncModelTexts.requiredFieldMessageTpl},getValue:function(n){var i=this,t;return n instanceof Ext.data.Store?n.count():Ext.isArray(n)?n.length:(t=String(n),i.getTrimStrings()&&(t=Ext.String.trim(t)),t.length)},isValid:function(n){var t=this,i=n===undefined||n===null||!t.getValue(n);return!i},validateWithOptions:function(n,t,i){var r=this;return i.validatePresence?r.callParent(arguments):{errorMessage:"",infoMessage:""}}});Ext.define("Ext.ux.data.validator.Desired",{extend:"Ext.ux.data.validator.Required",alias:"data.validator.desired",type:"desired",config:{trimStrings:!0,errorMessage:AsyncModelTexts.desiredField},validate:function(){var n=this,t=n.callParent(arguments);return Ext.isString(t)&&n.setInfoMessage(t),!0}});ValidatorRegistry.register("textCase",function(n){var t=n.name;return new Ext.data.validator.Validator(function(i,r){if(Ext.isString(i)&&n.validateTrimmed&&(i=Ext.String.trim(i)),Ext.isEmpty(i))return!0;var e=r.getMetaValue(t,"textCase"),u,f;switch(e){case TextCasings.upper:u=/^[^a-z]*$/;f=new Ext.XTemplate(AsyncModelTexts.onlyUpperCaseAllowedTpl);break;case TextCasings.lower:u=/^[^A-Z]*$/;f=new Ext.XTemplate(AsyncModelTexts.onlyLowerCaseAllowedTpl);break;case TextCasings.mixed:u=/^(?=.*[a-z])(?=.*[A-Z]).+$/;f=new Ext.XTemplate(AsyncModelTexts.onlyMixedCaseAllowedTpl);break;default:throw"Unsupported text case mode: "+n.textCase;}return u.test(i)?!0:f.apply(ValidationContext.create(r,t))})});ValidatorRegistry.register(["isEmailField","email"],function(n){return new Ext.data.validator.Format({matcher:/^(")?(?:[^\."])(?:(?:[\.])?(?:[\w\-!#$%&'*+\/=?\^_`{|}~]))*\1@(\w[\-\w]*\.){1,5}([A-Za-z]){2,6}$/,message:AsyncModelTexts.incorrectEmail,ignoreEmpty:!0,validateTrimmed:n.validateTrimmed})});Ext.define("Ext.ux.data.validator.MaskRe",{extend:"Ext.ux.data.validator.ParametrizedValidator",alias:"data.validator.maskre",type:"maskre",config:{validateTrimmed:!1,ignoreEmpty:!1,errorMessageTpl:AsyncModelTexts.forbiddenSymbols},isValid:function(n,t){var r=this,u=t.getMetaValue(r.getFieldName(),"maskRe"),f=!0,i;if(n=Ext.isString(n)&&r.getValidateTrimmed()?Ext.String.trim(n):n,Ext.isString(n)&&(!Ext.isEmpty(n)||!r.getIgnoreEmpty())&&u)for(i=0;i<n.length;i++)if(!u.test(n[i])){f=!1;break}return f}});ValidatorRegistry.register("maskRe",function(n){return new Ext.ux.data.validator.MaskRe({errorMessageTpl:n.maskReMesage,fieldName:n.name,ignoreEmpty:!0,validateTrimmed:n.validateTrimmed})});ValidatorRegistry.register("requireDigit",function(n){var t=new Ext.XTemplate(n.requireDigitMessageTpl||AsyncModelTexts.requireDigitTpl),i=n.name;return new Ext.data.validator.Validator(function(r,u){return(Ext.isString(r)&&n.validateTrimmed&&(r=Ext.String.trim(r)),Ext.isEmpty(r))?!0:/\d/.test(r)?!0:t.apply(ValidationContext.create(u,i))})});ValidatorRegistry.register("requireLetter",function(n){var t=new Ext.XTemplate(n.requireLetterMessageTpl||AsyncModelTexts.requireLetterTpl),i=n.name;return new Ext.data.validator.Validator(function(r,u){return(Ext.isString(r)&&n.validateTrimmed&&(r=Ext.String.trim(r)),Ext.isEmpty(r))?!0:/\D/.test(r)?!0:t.apply(ValidationContext.create(u,i))})});ValidatorRegistry.register({fieldAttributeNames:"storeUnique",validator:function(n){var i=new Ext.XTemplate(n.storeUniqueMessageTpl||AsyncModelTexts.storeUniqueTpl),t=n.name;return new Ext.data.validator.Validator(function(r,u){if(Ext.isString(r)&&n.validateTrimmed&&(r=Ext.String.trim(r)),Ext.isEmpty(r)||!u.store)return!0;var f=u.store.findBy(function(i){var f=i.get(t);return Ext.isString(f)&&n.validateTrimmed&&(f=Ext.String.trim(f)),i!==u&&f===r});return f!==-1?i.apply(ValidationContext.create(u,t)):!0})}});Ext.define("Ext.ux.data.FieldMetaModel",{extend:"Ext.data.Model",fields:[{name:"storeUnique",type:"bool",defaultValue:!1},{name:"readOnly",type:"bool",defaultValue:!1},{name:"displayName",type:"string",defaultValue:""},{name:"required",type:"bool",defaultValue:!1},{name:"desired",type:"bool",defaultValue:!1},{name:"validationErrorMessages",type:"auto",defaultValue:[]},{name:"validationInfoMessages",type:"auto",defaultValue:[]}]});Ext.define("Ext.ux.data.MetaModel",{extend:"Ext.data.Model",idProperty:"__fakeId__",constructor:function(){var n=this,t;n.callParent(arguments);t={afterEdit:function(t,i){n.callJoined("onMetaDataChanged",[t.fieldName,i,t])}};n._fieldMetaRecordsMap={};Ext.Array.forEach(n.fields,function(i){if(!i.identifier){var u="set"+Ext.String.capitalize(i.name),r=Ext.create(i.metaModelName);r.fieldName=i.name;n[u].call(n,r);r.join(t);n._fieldMetaRecordsMap[i.name]=r}});n.reset()},getMeta:function(n,t){var i=this;return i._fieldMetaRecordsMap[n].get(t)},setMeta:function(n,t,i){var r=this;return r._fieldMetaRecordsMap[n].set(t,i)},reset:function(){var n=this;Ext.Array.forEach(n.fields,function(t){t.identifier||n._fieldMetaRecordsMap[t.name].set(t.defaultValues)})},getMetaDataNames:function(n){var t=this,i,u,r;return n||Ext.Error.raise(t.$className+'.getMetaDataNames: "fieldName" parameter is not specified'),i=Ext.Array.findBy(t.fields,function(t){return t.name===n}),i||Ext.Error.raise(t.$className+'.getMetaDataNames: Field "'+n+'" not found'),u=Ext.ClassManager.get(i.metaModelName).fields,r=[],Ext.Array.each(u,function(n){n.identifier||r.push(n.name)}),r},statics:{globalFieldMetaModelMap:{},createMetaModel:function(n){var i=this,t,r;return n instanceof Ext.ux.data.AsyncModel||Ext.Error.raise("Ext.ux.data.MetaModel can be applied to Ext.ux.data.AsyncModel only"),t=Ext.getClassName(n)+"__Meta__",Ext.ClassManager.isCreated(t)||(r=Ext.Array.map(n.getFieldsDescriptors(),function(t){var r=i.getFieldMetaModelName(n,t),u=i.getMetaDefaults(r,t);return{name:t.name,reference:{type:r,role:t.name},defaultValues:u,metaModelName:r}}),Ext.define(t,{extend:"Ext.ux.data.MetaModel",fields:r})),Ext.create(t)},getMetaDefaults:function(n,t){var r=Ext.ClassManager.get(n).fields,i={};return Ext.Array.forEach(r,function(n){i[n.name]=t[n.name]||n.defaultValue||null}),i},getFieldMetaModelName:function(n,t){var r=this,i=t.metaModelName;return!i&&n.fieldMetaModelMap&&t.type&&(i=n.fieldMetaModelMap[t.type]),!i&&t.type&&(i=r.globalFieldMetaModelMap[t.type]),i||(i=n.fieldMetaModelName||"Ext.ux.data.FieldMetaModel"),i},assignDefaultFieldMetaModel:function(n,t){var i=this;i.globalFieldMetaModelMap[t]=n}}});Ext.define("Ext.ux.data.StringFieldMetaModel",{extend:"Ext.ux.data.FieldMetaModel",fields:[{name:"requireLetter",type:"bool",defaultValue:!1},{name:"requireDigit",type:"bool",defaultValue:!1},{name:"textCase",type:"string",defaultValue:null},{name:"maskRe",type:"auto",defaultValue:null},{name:"maxLength",type:"integer",allowNull:!0,defaultValue:null},{name:"minLength",type:"integer",allowNull:!0,defaultValue:null},{name:"displaySecured",type:"bool",defaultValue:!1}]});Ext.ux.data.MetaModel.assignDefaultFieldMetaModel("Ext.ux.data.StringFieldMetaModel","string");Ext.define("Ext.ux.data.field.Array",{extend:"Ext.data.field.Field",alias:"data.field.array",isArrayField:!0,compare:function(n,t){var i=n.length,r=t.length;return i==r?0:i<r?-1:1},isEqual:function(n,t){return Ext.Array.equals(n,t)}});Ext.define("Ext.ux.data.field.Email",{extend:"Ext.data.field.String",alias:"data.field.email",isEmailField:!0});Ext.ux.data.MetaModel.assignDefaultFieldMetaModel("Ext.ux.data.StringFieldMetaModel","email");Ext.define("Ext.ux.data.AsyncModel",{extend:"Ext.data.Model",mixins:["Ext.util.Observable"],validateOnChange:!0,validateOnMetaDataChange:!1,defaultFieldErrorMessage:"Value is invalid",defaultModelErrorMessage:"Some fields have incorrect data",_businessRulesSyncCounter:0,_suppressBusinessLogic:0,_suppressValidityReset:0,_suppressValidChangeEvent:0,_suppressChangeEvent:0,_errorMessage:"",_infoMessage:"",fields:[{name:"meta",persist:!1,reference:"Ext.ux.data.MetaModel"}],constructor:function(n,t,i){var r=this,f=Ext.clone(n),u;r.mixins.observable.constructor.call(r);r.validationRules=r.validationRules||{};r.businessRules=r.businessRules||{};i=i||{};i.eagerNetsedInstantiation=!0;r._defaultValidatorRegistry={required:{validator:function(n){return{type:"required",errorMessageTpl:n.requiredMessage,fieldName:n.name,trimStrings:n.validateTrimmed}}},desired:{validator:function(n){return{type:"desired",errorMessageTpl:n.desiredMessage,fieldName:n.name,trimStrings:n.validateTrimmed}}}};r._ignoredFieldNames=[];r._modifiedNestedFieldNames=[];r._validationCallbacks=[];r._businessLogicSyncCallbacks=[];r._suppressValidityReset++;r.callParent(arguments);r.initFields(i?i.eagerNetsedInstantiation:!1);r.initMetaData();r.initBusinessRules();r.initValidationModel();r._suppressValidityReset--;u=r.isEqual;r.isEqual=function(n,t,i){var f=this,r=null,e;return i&&(e=i.isField?i.name:i,r=f.getFieldDescriptor(e)),r&&(r.isModelField||r.isStoreField)?n===t:u.apply(f,arguments)};r.join({afterEdit:function(){var n=Array.prototype.slice.call(arguments,0);n.shift();r.afterEdit.apply(r,n)}});n&&r.initData();i&&i.applyNested&&r.loadData(f)},getFieldsDescriptors:function(){var n=this;return n._fieldsDescriptors},getMetaDataNames:function(n){var t=this;return t._metaModel.getMetaDataNames(n)},initData:function(){var n=this,t=Ext.Array.map(n._fieldsDescriptors,function(n){return n.name});Ext.Object.each(n.data,function(i){Ext.Array.contains(t,i)||delete n.data[i]})},initFields:function(n){var t=this;t._fieldsDescriptors=[];Ext.Array.forEach(t.fields,function(n){n.name==="meta"||n.reference||t._fieldsDescriptors.push(n)});Ext.Object.eachValue(t.associations,function(i){var e=i.association.isOneToOne?!i.left:i.left,f=i.association.field||i.field,r,u;f&&e&&i.role!=="meta"&&(r={name:i.role,schemaRole:i},Ext.isObject(f)&&(r=Ext.apply(r,f)),r.instance=Ext.bind(t[i.getterName],t),i.association.isOneToOne?(n&&(t[i.setterName].call(t,new i.cls(null,null,{eagerNetsedInstantiation:n})),t.subscribeNestedModel(r.instance(),r.name)),r.isModelField=!0):(u=r.instance(),Ext.ux.data.AsyncStore.decorate(u),t.subscribeNestedStore(u,r.name),r.isStoreField=!0,u.applyModelConfig({validateOnChange:t.validateOnChange,validateOnMetaDataChange:t.validateOnMetaDataChange})),t._fieldsDescriptors.push(r))})},initMetaData:function(){var n=this;n._metaModel=Ext.ux.data.MetaModel.createMetaModel(n);n._metaModel.join({onMetaDataChanged:function(t,i,r,u){Ext.Array.each(r,function(t){n.onMetaDataChange(i,t,u.get(t))})}});n.setMeta(n._metaModel)},initValidationModel:function(){var n=this,t=Ext.apply(n._defaultValidatorRegistry,n.validatorRegistry),i;n._validatorRegistry=ValidatorRegistry.getData(t);i=JSON.stringify({});n._validationModel={};n._validationRules={};Ext.Array.forEach(n._fieldsDescriptors,function(t){n._validationModel[t.name]={callbacks:[]};n.initFieldValidationRules(t.name)});n.resetValidation()},initFieldValidationRules:function(n){var t=this,i=t.createFieldAutomaticValidationRules(n),r=Ext.Array.from(t.validationRules[n]);Ext.Array.each(r,function(r){i.push(t.createValidationRule(r,n))});t._validationRules[n]=i},initBusinessRules:function(){var n=this;n._businessRuleCompletedCallback=Ext.bind(n.onBusinessRuleCompleted,n);n._businessRules={};Ext.Array.forEach(n._fieldsDescriptors,function(t){var u=t.name+"Change",f=n.businessRules[u],i,r;f&&(n._businessRules[u]=n.createAsyncRule(t.name,f,n.defaultBusinessService));i=t.name+"ValidChange";r=n.businessRules[i];r&&(n._businessRules[i]=n.createAsyncRule(t.name,r,n.defaultBusinessService))})},syncWithBusinessRules:function(n){var t=this;t._businessRulesSyncCounter+=t._fieldsDescriptors.length;Ext.Array.forEach(t._fieldsDescriptors,function(n){(n.isStoreField||n.isModelField)&&n.instance()?n.instance().syncWithBusinessRules(t._businessRuleCompletedCallback):t._businessRulesSyncCounter--});t._businessRulesSyncCounter===0?n():t._businessLogicSyncCallbacks.push(n)},loadData:function(n){var t=this;t.syncWithBusinessRules(function(){t._suppressValidityReset++;t._suppressBusinessLogic++;t.resetMetaData();n[t.idProperty]===undefined?t.clearAllFields([t.idProperty]):t.clearAllFields();t.beginEdit();Ext.Array.forEach(t._fieldsDescriptors,function(i){var r,f,u,e;if(i.isStoreField){if(r=i.instance(),n[i.name]&&r){for(f=[],u=0;u<n[i.name].length;u++)e=r.createModel({}),e.loadData(n[i.name][u]),f.push(e);r.loadData(f)}}else i.isModelField?n[i.name]&&i.instance()&&i.instance().loadData(n[i.name]):n[i.name]!==undefined&&t.set(i.name,n[i.name])});t.endEdit();t.commit(!0);t.onLoading();t._suppressBusinessLogic--;t._suppressValidityReset--;t.resetValidation();t.onLoad()})},runBusinessLogic:function(n,t,i){var r=this;i?r.syncWithBusinessRules(function(){r.callBusinessRuleFn(n,t)}):r.callBusinessRuleFn(n,t)},clear:function(n){var t=this;t.syncWithBusinessRules(function(){t.resetMetaData();t._suppressValidityReset++;t._suppressBusinessLogic++;t.clearAllFields(n);t.onClearing();t._suppressBusinessLogic--;t._suppressValidityReset--;t.resetValidation();t.onClear()})},validate:function(n,t){var i=this;(n=n||{},t&&i._validationCallbacks.push(t),i.isValidating)||(i.isValidating=!0,i.syncWithBusinessRules(function(){var t=[],r=[],u=i.getNumOfFields()+i.getNumOfComplexFields(),f=function(f,e){if(t=t.concat(f),r=r.concat(e),u--,u===0)if(i.isValidating=!1,i.isValidated())i.onModelValidated(t,r);else i.validate(n)};if(Ext.isFunction(i.onValidate)){u++;i.onValidate(n,function(n,t){i._errorMessage=n;i._infoMessage=t;f([n],[t])})}Ext.Array.forEach(i._fieldsDescriptors,function(t){i.validateField(t.name,n,f);(t.isStoreField||t.isModelField)&&t.instance()&&t.instance().validate(n,f)})}))},validateField:function(n,t,i){var r=this;t=t||{};r.performValidation(n,t,i)},resetValidation:function(){var n=this;n._errorMessage="";n._infoMessage="";Ext.Array.forEach(n._fieldsDescriptors,function(t){n.resetFieldValidation(t.name);(t.isStoreField||t.isModelField)&&t.instance()&&t.instance().resetValidation()});Ext.Array.erase(n._validationCallbacks,0,n._validationCallbacks.length)},isValidated:function(){var t=this,n;return t.isValidating?!1:(n=!0,Ext.Array.each(t._fieldsDescriptors,function(i){var r=t._validationModel[i.name];return n=r.isValidated,n&&(i.isStoreField||i.isModelField)&&i.instance()&&(n=i.instance().isValidated()),n?void 0:!1}),n)},isValid:function(){var t=this,n=!t._errorMessage;return n&&Ext.Array.each(t._fieldsDescriptors,function(i){return n=!t.getMetaValue(i.name,"validationErrorMessages").length,n&&(i.isStoreField||i.isModelField)&&i.instance()&&(n=i.instance().isValid()),n?void 0:!1}),n},setMetaValue:function(n,t,i){var r=this;(t==="validationErrorMessages"||t==="validationInfoMessages")&&Ext.Error.raise('Direct set of "validationErrorMessages" or "validationInfoMessages" is forbidden');r.setMetaInternal(n,t,i)},setAllFieldsMeta:function(n,t){var i=this;Ext.Array.forEach(i._fieldsDescriptors,function(r){i.setMetaValue(r.name,n,t)})},getMetaValue:function(n,t){var i=this;return i._metaModel.getMeta(n,t)},resetMetaData:function(){var n=this;n._metaModel.reset()},getFieldValidationInfo:function(n){var t=this,i,r;return n!==t.idProperty?(i=t.getFieldDescriptor(n),r=t._validationModel[n],{isValidated:r.isValidated,isValidating:r.isValidating,validationErrorMessages:t.getMetaValue(n,"validationErrorMessages"),validationInfoMessages:t.getMetaValue(n,"validationInfoMessages"),subInfo:(i.isStoreField||i.isModelField)&&i.instance()?i.instance().getAllValidationInfo():null}):null},getAllValidationInfo:function(){var n=this,t={};return Ext.Object.each(n._validationModel,function(i){t[i]=n.getFieldValidationInfo(i)}),t},onModelValidated:function(n,t){var i=this;Ext.each(i._validationCallbacks,function(i){i(n,t)});Ext.Array.erase(i._validationCallbacks,0,i._validationCallbacks.length)},onFieldValidated:function(n){var t=this,r=t._validationModel[n],i,u;if(t.executeFieldValidationCallbacks(n),i=t.getMetaValue(n,"validationErrorMessages"),u=t.getMetaValue(n,"validationInfoMessages"),t.fireEvent("validated",t,n,i,u),t.afterValidated([n]),!i.length&&!t._suppressValidChangeEvent&&!t.isEqual(r.lastValidValue,t.get(n),n)){r.lastValidValue=t.get(n);t.onValidChange(n)}},onValidChange:function(n){var t=this;t._suppressBusinessLogic||t.runBusinessRule(n,"ValidChange");t.fireEvent("validchange",t,n);t.afterValidChange([n])},onLoading:Ext.emptyFn,onClearing:Ext.emptyFn,onLoad:Ext.emptyFn,onClear:Ext.emptyFn,onModelChange:function(n){var t=this;n&&(n=n.filter(function(n){return n!=="meta"}));Ext.each(n,function(n){t._suppressBusinessLogic||t.runBusinessRule(n,"Change")});t._suppressChangeEvent||t.fireChangeEvent(n);t._suppressValidityReset||t.resetValidity(n)},onMetaDataChange:function(n,t,i){var r=this;r.fireEvent("metadatachange",r,n,t,i);!r._suppressValidityReset&&r.validateOnMetaDataChange&&t!=="validationErrorMessages"&&t!=="validationInfoMessages"&&r.resetFieldValidity(n);r.afterMetaDataChange([n])},onBusinessRuleCompleted:function(){var n=this;n._businessRulesSyncCounter--;n._businessRulesSyncCounter===0&&n.onBusinessLogicCompleted()},onBusinessLogicCompleted:function(){var n=this;Ext.each(n._businessLogicSyncCallbacks,function(n){n()});Ext.Array.erase(n._businessLogicSyncCallbacks,0,n._businessLogicSyncCallbacks.length)},endEdit:function(n,t){var i=this;t||(t=i.getModifiedFieldNames(),t=t.concat(i._modifiedNestedFieldNames));i.callParent([n,t]);i._modifiedNestedFieldNames=[]},cancelEdit:function(){var n=this;n._modifiedNestedFieldNames=[];n.callParent(arguments)},afterEdit:function(n){var t=this;t.onModelChange(n)},getData:function(n){var i=this,t;return n=n||{},t=i.callParent(arguments),n.includeMeta||delete t.meta,t},reject:function(n){var t=this,i,r=t.modified,u=[];for(i in r)r.hasOwnProperty(i)&&typeof r[i]!="function"&&u.push(i);if(t.callParent(arguments),n&&t._suppressChangeEvent++,u.length)t.onModelChange(u);n&&t._suppressChangeEvent--},set:function(n,t,i){var r=this;i&&i.silent&&r._suppressChangeEvent++;r.callParent(arguments);i&&i.silent&&r._suppressChangeEvent--},afterValidated:function(n){var t=this;t.callJoined("afterValidated",n)},afterValidChange:function(n){var t=this;t.callJoined("afterValidChange",n)},afterMetaDataChange:function(n){var t=this;t.callJoined("afterMetaDataChange",n)},getFieldValue:function(n){var i=this,t=Ext.Array.findBy(i._fieldsDescriptors,function(t){return t.name===n});return t&&(t.isStoreField||t.isModelField)?t.instance():i.get(n)},resetFieldValidation:function(n){var i=this,t=i._validationModel[n];t.isValidating=!1;t.isValidated=!0;t.lastValidatingOptions="{}";t.fieldState=0;t.lastValidValue=i.get(n);Ext.Array.erase(t.callbacks,0,t.callbacks.length);i._suppressValidChangeEvent=!0;i.resetValidationMessages(n);i.onFieldValidated(n);i._suppressValidChangeEvent=!1},performValidation:function(n,t,i){var u=this,r=u._validationModel[n],f=JSON.stringify(t),o=r.fieldState,e=f!==r.lastValidatingOptions||o!==r.fieldState;e&&(r.lastValidatingOptions=f);i&&r.callbacks.push(i);!r.isValidating||e?(r.isValidating=!0,r.isValidated&&!e?(r.isValidating=!1,u.executeFieldValidationCallbacks(n)):(r.isValidated=!1,u.runFieldValidationRules(n,t,function(i,e){if(r.lastValidatingOptions===f)if(r.isValidating=!1,o===r.fieldState){u.setValidationMessages(n,i,e);r.isValidated=!0;u.onFieldValidated(n)}else u.performValidation(n,t)}))):r.isValidating||u.executeFieldValidationCallbacks(n)},runFieldValidationRules:function(n,t,i){var u=this,s=u._validationRules[n],l=Ext.Array.filter(s,function(n){return!n.isAsync}),e=Ext.Array.filter(s,function(n){return n.isAsync}),r=[],f=[],h=u.getFieldValue(n),o,c;Ext.Array.each(l,function(n){var i=n.fn.call(n.scope,h,u,t);i.errorMessage&&r.push(i.errorMessage);i.infoMessage&&f.push(i.infoMessage)});!r.length&&e.length?(o=e.length,c=function(n,t){o--;n&&r.push(n);t&&f.push(t);o||i(r,f)},Ext.Array.forEach(e,function(n){n.fn.call(n.scope,h,u,t,c)})):i(r,f)},executeFieldValidationCallbacks:function(n){var t=this,i=t._validationModel[n];Ext.each(i.callbacks,function(i){i(t.getMetaValue(n,"validationErrorMessages"),t.getMetaValue(n,"validationInfoMessages"))});Ext.Array.erase(i.callbacks,0,i.callbacks.length)},resetValidity:function(n){var t=this;t.validateOnChange&&Ext.each(n,function(n){n!==t.idProperty&&t.resetFieldValidity(n)})},resetFieldValidity:function(n){var i=this,t;i.validateOnChange&&(t=i._validationModel[n],t.fieldState++,t.isValidated=!1,t.isValidating=!1,i.validateField(n,null))},runBusinessRule:function(n,t){var i=this,r=n+t;i._businessRules[r]&&i.callBusinessRuleFn(function(t,u){var f=i._businessRules[r];f.fn.call(f.fn.scope,i.getFieldValue(n),i,u)})},callBusinessRuleFn:function(n,t){var i=this;i._businessRulesSyncCounter++;n.call(t,i,i._businessRuleCompletedCallback)},createFieldAutomaticValidationRules:function(n){var t=this,i=[],r=t.getFieldDescriptor(n),f=t.getMetaDataNames(n),u=[];return Ext.Object.each(t._validatorRegistry,function(n,e){if(!Ext.Array.contains(u,e)&&(Ext.Array.contains(f,n)||e.activator(t,r.name,n))){var o=t.createAutomaticValidationRule(r,e,n);u.push(e);i.push(o)}}),i},createAutomaticValidationRule:function(n,t,i){var e=this,r=t.validator,o,h,u,s,f;if(Ext.isString(r))r={type:r,fieldName:n.name};else if(Ext.isObject(r))r=Ext.clone(r),r.fieldName=n.name;else if(Ext.isFunction(r)){r=r(n);for(o in r)Ext.isDefined(r[o])||delete r[o]}else Ext.Error.raise("Validator is improperly defined. Detected while creating validation rules for '"+n.name+"'");return h="",u=e.createStandardValidationRule(h,r),u||Ext.Error.raise("Failed to create validation rule"),s=t.activator,u.isAsync?(f=u.fn,u.fn=function(t,r,o){s(e,n.name,i)?f.apply(u.scope,arguments):Ext.callback(o,null,["",""])}):(f=u.fn,u.fn=function(){return s(e,n.name,i)?f.apply(u.scope,arguments):{errorMessage:"",infoMessage:""}}),u},createFieldStandardValidationRule:function(n,t){var f=this,u=null,i,r;return(Ext.isString(t)&&t.indexOf(".")===-1||Ext.isObject(t))&&(i={fieldName:n},r=null,Ext.isObject(t)?(Ext.apply(i,t),r=t.name,delete i.name):i.type=t,u=f.createStandardValidationRule(r,i)),u},createStandardValidationRule:function(n,t){var i=this,r;try{r=i.createStandardSyncValidationRule(n,t)}catch(u){}return r||i.createStandardAsyncValidationRule(n,t)},createStandardSyncValidationRule:function(n,t){var r=this,i;if(t instanceof Ext.data.validator.Validator)i=t;else try{i=Ext.Factory.dataValidator(t)}catch(u){}return i?(Ext.ux.data.validator.ParametrizedValidator.decorateStandard(i),{isAsync:!1,name:n||Ext.id(i,"StandardSyncValidationRule-"+i.type+"-"),fn:i.validateWithOptions,scope:i}):null},createStandardAsyncValidationRule:function(n,t){var r=this,i;if(t instanceof Ext.ux.data.validator.AsyncValidator)i=t;else try{i=Ext.Factory.dataAsyncValidator(t)}catch(u){}return i?i?{isAsync:!0,name:n||Ext.id(i,"StandardAsyncValidationRule-"+i.type+"-"),fn:i.validate,scope:i}:void 0:null},createValidationRule:function(n,t){var i=this;return i.createFieldStandardValidationRule(t,n)||i.createAsyncRule(t,n,i.defaultValidationService)},createAsyncRule:function(n,t,i){var r=this,u={fieldName:n},h,f,e,l;if(Ext.isObject(t)?(Ext.apply(u,t),e=rule.descriptor,delete u.descriptor):e=t,l=u.name||Ext.id(r,"AsyncRule"),delete u.name,Ext.isFunction(e))h=Ext.bind(e,r,[u],0),f=r;else{var o=i||"this",s=e,c=e.split(".");c.length===2&&(o=c[0],s=c[1]);o==="this"?(r[s]||Ext.Error.raise(s+" is not defined"),f=r):f=Deft.Injector.canResolve(o)?Deft.Injector.resolve(o):r[o];h=Ext.bind(f[s],f,[u],0)}return{isAsync:!0,name:l,fn:h,scope:f}},getDefaultData:function(n){var t=this,i={};return Ext.Array.forEach(t._fieldsDescriptors,function(r){n&&Ext.Array.contains(n,r.name)||(i[r.name]=t.getDefaultFieldValue(r.name))}),i},getDefaultFieldValue:function(n){var e=this,u=e.getFieldDescriptor(n),t=e.getFieldValue(n),f=u.allowNull,r=u.defaultValue,i=null;return u.isModelField?t&&(i=t.getDefaultData()):u.isStoreField||Ext.isArray(t)?i=r||[]:Ext.isString(t)?i=r||"":Ext.isNumber(t)?i=r||(f?null:0):Ext.isBoolean(t)?i=r||(f?null:!1):Ext.isDate(t)&&(i=r||(f?null:"")),i},getField:function(n){var t=this;return Ext.Array.findBy(t.getFields(),function(t){return t.name===n})},clearAllFields:function(n){var t=this;t.beginEdit();Ext.Array.forEach(t._fieldsDescriptors,function(i){n&&Ext.Array.contains(n,i.name)||t.clearField(i.name)});t.endEdit()},clearField:function(n){var t=this,r=t.getFieldDescriptor(n),i;if(r.isModelField||r.isStoreField){i=t.getFieldValue(n);i&&i.clear();return}t.set(n,t.getDefaultFieldValue(n))},getNumOfFields:function(){var n=this;return n._fieldsDescriptors.length},getNumOfComplexFields:function(){var n=this;return Ext.Array.filter(n._fieldsDescriptors,function(n){return n.isStoreField||n.isModelField}).length},fireChangeEvent:function(n){var t=this,i=Ext.Array.remove(Ext.Array.clone(n),t._ignoredFieldNames);t._ignoredFieldNames.concat(i);t.fireEvent("change",t,i);Ext.Array.remove(t._ignoredFieldNames,i)},subscribeNestedModel:function(n,t){var i=this;n.on("change",i.onNestedModelChange,i,{fieldName:t})},onNestedModelChange:function(n,t,i){var r=this;r.editing?r._modifiedNestedFieldNames.push(i.fieldName):r.afterEdit([i.fieldName])},subscribeNestedStore:function(n,t){var i=this;n.on("add",i.onNestedStoreAdd,i,{fieldName:t});n.on("remove",i.onNestedStoreRemove,i,{fieldName:t});n.on("update",i.onNestedStoreUpdate,i,{fieldName:t})},onNestedStoreUpdate:function(n,t,i,r,u,f){var e=this;switch(i){case Ext.data.Model.EDIT:case Ext.data.Model.REJECT:e.editing?e._modifiedNestedFieldNames.push(f.fieldName):e.afterEdit([f.fieldName])}},setValidationMessages:function(n,t,i){var r=this;r.setMetaInternal(n,"validationInfoMessages",i||[],!0);r.setMetaInternal(n,"validationErrorMessages",t||[],!0)},resetValidationMessages:function(n){var t=this;t.setMetaInternal(n,"validationInfoMessages",[],!0);t.setMetaInternal(n,"validationErrorMessages",[],!0)},setMetaInternal:function(n,t,i,r){var u=this;r&&u._suppressValidityReset++;u._metaModel.setMeta(n,t,i);r&&u._suppressValidityReset--},onNestedStoreChange:function(n,t,i,r){var u=this;u.editing?u._modifiedNestedFieldNames.push(r.fieldName):u.afterEdit([r.fieldName])},onNestedStoreRemove:function(n,t,i,r,u){var f=this;f.onNestedStoreChange(n,t,i,u)},onNestedStoreAdd:function(n,t,i,r){var u=this;u.onNestedStoreChange(n,t,i,r)},getFieldDescriptor:function(n){var t=this;return Ext.Array.findBy(t._fieldsDescriptors,function(t){return t.name===n})},getStuckValidations:function(){var t=this,n=[];return Ext.Object.each(t._validationModel,function(t,i){i.callbacks.length&&n.push(t)}),n},statics:{initValidationRules:function(n,t,i){var r={},u,f;i._validationRules&&(u=i._validationRules,delete i._validationRules,r=Ext.merge(r,u));n._validationRules&&(f=n._validationRules,delete n._validationRules,r=Ext.merge(r,f));t._validationRules=i._validationRules=r},initBusinessRules:function(n,t,i){var r={},u,f;i._businessRules&&(u=i._businessRules,delete i._businessRules,r=Ext.merge(r,u));n._businessRules&&(f=n._businessRules,delete n._businessRules,r=Ext.merge(r,f));t._businessRules=i._businessRules=r},initValidatorsMap:function(n,t,i){var r={},u,f;i._validatorsMap&&(u=i._validatorsMap,delete i._validatorsMap,r=Ext.merge(r,u));n._validatorsMap&&(f=n._validatorsMap,delete n._validatorsMap,r=Ext.merge(r,f));t._validatorsMap=i._validatorsMap=r}}},function(){var n=this;n.onExtended(function(t,i){var r=t.prototype;n.initValidationRules(i,t,r);n.initBusinessRules(i,t,r);n.initValidatorsMap(i,t,r)})});Ext.data.Model.addStatics({METACHANGE:"metachange",VALIDCHANGE:"validchange",VALIDATED:"validated"});Ext.define("Ext.ux.data.AsyncStore",{statics:{decorate:function(n){Ext.override(n,{isAsyncStore:!0,_validationCallbacks:[],_businessLogicSyncCallbacks:[],applyModelConfig:function(n){var t=this;t._modelConfig=n;t.each(function(t){Ext.apply(t,n)})},syncWithBusinessRules:function(n){var t=this,i;t.businessRulesSyncCounter=t.count();i=function(){t.onRecordBusinessLogicCompleted()};t.each(function(n){n.syncWithBusinessRules(i)});t.businessRulesSyncCounter===0?Ext.callback(n):t._businessLogicSyncCallbacks.push(n)},clear:function(){var n=this;n.removeAll();Ext.Array.erase(n._validationCallbacks,0,n._validationCallbacks.length)},validate:function(n,t){var i=this;if(t&&i._validationCallbacks.push(t),!i.isValidating){var f=i.count(),r=[],u=[],e=function(t,e){if(r=r.concat(t),u=u.concat(e),f--,f===0)if(i.isValidating=!1,i.isValidated())i.onStoreValidated(r,u);else i.validate(n)};if(f)i.isValidating=!0,i.each(function(t){t.validate(n,e)});else i.onStoreValidated(r,u)}},resetMetaData:function(){var n=this;n.each(function(n){n.resetMetaData()})},resetValidation:function(){var n=this;n.each(function(n){n.resetValidation()});Ext.Array.erase(n._validationCallbacks,0,n._validationCallbacks.length)},isValidated:function(){var t=this,n=!0;return t.each(function(t){return n=t.isValidated(),n?void 0:!1}),n},isValid:function(){var t=this,n=!0;return t.each(function(t){return n=t.isValid(),n?void 0:!1}),n},getAllValidationInfo:function(){var t=this,n=[];return t.each(function(t){n.push(t.getAllValidationInfo())}),n},onRecordBusinessLogicCompleted:function(){var n=this;n.businessRulesSyncCounter--;n.businessRulesSyncCounter===0&&n.onBusinessLogicCompleted()},onBusinessLogicCompleted:function(){var n=this;Ext.each(n._businessLogicSyncCallbacks,function(n){Ext.callback(n)});Ext.Array.erase(n._businessLogicSyncCallbacks,0,n._businessLogicSyncCallbacks.length)},onStoreValidated:function(n,t){var i=this;Ext.each(i._validationCallbacks,function(i){i(n,t)});Ext.Array.erase(i._validationCallbacks,0,i._validationCallbacks.length)},createModel:function(){var n=this,t=n.callParent(arguments);return n._modelConfig&&Ext.apply(t,n._modelConfig),t},afterMetaDataChange:function(n,t){this.getData().itemChanged(n,t||null,undefined,Ext.data.Model.METACHANGE)},afterValidChange:function(n,t){this.getData().itemChanged(n,t||null,undefined,Ext.data.Model.VALIDCHANGE)}})}}});Ext.define("Ext.ux.plugin.GridMetaDataBinding",{alias:"plugin.gridmetadatabinding",extend:"Ext.AbstractPlugin",inject:{gridMetaDataBinders:"IGridMetaDataBinder[]"},mixins:["Ext.util.Observable"],init:function(n){var t=this;t._owner=n;t.mixins.observable.constructor.call(t);t.callParent(arguments);t.initBinders()},initBinders:function(){var n=this;n._bindersInitialized||(n.overrideColumnRenderers(),n.overrideGridViewOnUpdate(n._owner),n.mon(n._owner,{reconfigure:{fn:n.onReconfigure,scope:n}}),Ext.Array.each(n.gridMetaDataBinders,function(t){t.onInit(n._owner,n)}),n._bindersInitialized=!0)},destroy:function(){var n=this;n._bindersInitialized&&Ext.Array.each(n.gridMetaDataBinders,function(t){t.onDestroy(n._owner,n)})},getMetaDataMap:function(n){var i=n.columns,t=null;return Ext.each(i,function(n){n.metaDataIndex&&(t=t||{},t[n.metaDataIndex]||(t[n.metaDataIndex]=[]),t[n.metaDataIndex].push(n.dataIndex))}),t},onReconfigure:function(n,t,i){var r=this;i&&r.overrideColumnRenderers()},overrideGridViewOnUpdate:function(n){var i=this,r=i.getMetaDataMap(n),t=n.getView(),u=t.onUpdate;t.onUpdate=r?function(n,f,e,o){e!==Ext.data.Model.VALIDCHANGE&&(e===Ext.data.Model.METACHANGE&&(arguments[3]=i.updateChangedFieldNames(o,r)),u.apply(t,arguments))}:function(n,i,r){r!==Ext.data.Model.VALIDCHANGE&&u.apply(t,arguments)}},updateChangedFieldNames:function(n,t){var i=Ext.Array.clone(n);return Ext.each(n,function(n){var r=t[n];r&&(i=i.concat(r))}),i},overrideColumnRenderers:function(){var n=this,t=n._owner.columns;Ext.each(t,function(t){var i=t.renderer,r;t.xtype!=="rownumberer"&&(r=i?function(t,r,u,f,e,o,s){return t=n.renderer(t,r,u,f,e,o,s),i.apply(this,[t,r,u,f,e,o,s])}:Ext.bind(n.renderer,n),Ext.apply(t,{renderer:r,hasCustomRenderer:!0}))})},renderer:function(n,t,i,r,u,f,e){var o=this,s=t.column.dataIndex;return s&&Ext.Array.each(o.gridMetaDataBinders,function(n){n.onRender(t,i,r,u,f,e)}),n}});Ext.define("Ext.ux.plugin.MetaDataBinding",{alias:"plugin.metadatabinding",extend:"Ext.AbstractPlugin",inject:{metaDataBinders:"IMetaDataBinder[]"},pathDelimiter:".",init:function(n){var t=this;n._metaDataBindable=!0;t._formFields=new DynamicComponentQuery(n,"[isFormField]:not([excludeForm]):not([bindMeta=false])","[_metaDataBindable] [isFormField]");t._metaDataBinders=Ext.ux.util.Lookup.fromArray(t.metaDataBinders,function(n){return n.getMetaDataName()});t._modelBindingCallbacks=new Ext.ux.util.Lookup;t._modelBinds={};t._formFields.every(function(n){n._metaBound||(t.bindComponent(n),n._metaBound=!0)});t._formFields.everyRemoved(function(n){n._metaBound&&(t.unbindComponent(n),delete n._metaBound)})},bindComponent:function(n){var t=this,u=n.getBind(),f,r,c;if(u&&u.value&&n.bindMeta!==!1){if(f=u.value.stub.path,r=f.split(t.pathDelimiter),r.length<2)return;var e=r[r.length-1],i=r.slice(0,-1).join(t.pathDelimiter),l=Ext.Array.insert(r,r.length-1,"meta"),o=l.join(t.pathDelimiter),s=n.lookupViewModel(),h=s.get(i);h?t.bindComponentToModelField(n,h,e,o):(t._modelBinds[i]||(c="{"+i+"}",t._modelBinds[i]=s.bind(c,function(n){n&&(t._modelBindingCallbacks.eachForKey(i,function(t){t(n)}),t._modelBindingCallbacks.removeKey(i),t._modelBinds[i].destroy())})),t._modelBindingCallbacks.add(i,function(i){t.bindComponentToModelField(n,i,e,o)}))}},unbindComponent:function(n){var t=this;n._metaBinds&&Ext.Array.forEach(n._metaBinds,function(t){t.bind.destroy();t.binder.onComponentUnbound(n)})},bindComponentToModelField:function(n,t,i,r){var e=this,o,u,f;t instanceof Ext.ux.data.AsyncModel&&(o=n.lookupViewModel(),u=t.getMetaDataNames(i),Ext.isObject(n.bindMeta)&&(u=Ext.Array.filter(u,function(t){return!!n.bindMeta[t]})),f=[],Ext.Array.forEach(u,function(u){var s=e.getMetaDataBinder(n,u);if(s){s.onComponentBound(n,t,i);s.applyMetaData(n,t.getMetaValue(i,u),t,i);var h=r+e.pathDelimiter+u,c="{"+h+"}",l=o.bind(c,function(r){s.applyMetaData(n,r,t,i)});f.push({bind:l,binder:s})}}),n._metaBinds=f)},getMetaDataBinder:function(n,t){var u=this,i,r=0;return u._metaDataBinders.eachForKey(t,function(t){var u=t.isApplicable(n);u=u===!0?1:Ext.isNumber(u)?u:0;u>r&&(i=t,r=u)}),i}});Ext.defineInterface("IMetaDataBinder",{inherit:"ISingleton",methods:["isApplicable","onComponentBound","onComponentUnbound","applyMetaData"],properties:[{name:"listenedMetaDataNames",readOnly:!0},{name:"metaDataName",readOnly:!0}]});Ext.define("Ext.ux.binder.AbstractFormFieldBinder",{implement:"IMetaDataBinder",abstractClass:!0,getMetaDataName:function(){return this.metaDataName||Ext.Error.raise("metaDataName not defined"),this.metaDataName},getListenedMetaDataNames:function(){return this.metaDataName||Ext.Error.raise("metaDataName not defined"),[this.metaDataName]},onComponentBound:function(){},onComponentUnbound:function(){},isApplicable:function(n){return n.isFormField},applyMetaData:function(){},applyPlugin:function(n,t){var i=Ext.isString(t)?t:t.ptype;n.findPlugin(i)||n.addPlugin(t)}});Ext.define("Ext.ux.binder.FormFieldDisplayNameBinder",{extend:"Ext.ux.binder.AbstractFormFieldBinder",metaDataName:"displayName",applyMetaData:function(n,t){Ext.isString(t)&&n.setFieldLabel(t)}});Ext.define("Ext.ux.binder.FormFieldReadOnlyBinder",{extend:"Ext.ux.binder.AbstractFormFieldBinder",metaDataName:"readOnly",onComponentBound:function(n){this.applyPlugin(n,"readonlylatching")},applyMetaData:function(n,t){t?n.latchReadOnly():n.unlatchReadOnly()}});Ext.define("Ext.ux.binder.FormFieldRequiredBinder",{extend:"Ext.ux.binder.AbstractFormFieldBinder",requiredClassName:"requiredField",metaDataName:"required",applyMetaData:function(n,t,i,r){var f=this,u=n.requiredClassName===undefined?f.requiredClassName:n.requiredClassName;t&&!i.getMetaValue(r,"readOnly")?n.addCls(u):n.removeCls(u)}});Ext.define("Ext.ux.binder.FormFieldDesiredBinder",{extend:"Ext.ux.binder.AbstractFormFieldBinder",desiredClassName:"desiredField",metaDataName:"desired",applyMetaData:function(n,t,i,r){var f=this,u=n.desiredClassName===undefined?f.desiredClassName:n.desiredClassName;t&&!i.getMetaValue(r,"readOnly")?n.addCls(u):n.removeCls(u)}});Ext.define("Ext.ux.binder.FormFieldValidationBinder",{extend:"Ext.ux.binder.AbstractFormFieldBinder",metaDataName:"validationErrorMessages",onComponentBound:function(n){this.applyPlugin(n,"externalvalidating")},applyMetaData:function(n,t){n.setExternalErrors("modelValidation",t)}});Ext.define("Ext.ux.binder.TextFieldCasingBinder",{extend:"Ext.ux.binder.AbstractFormFieldBinder",metaDataName:"textCase",onComponentBound:function(n){this.applyPlugin(n,"fieldcasing")},applyMetaData:function(n,t){var i=this;n.setCasing(t)},isApplicable:function(n){return this.callParent(arguments)&&n instanceof Ext.form.field.Text}});Ext.define("Ext.ux.binder.TextFieldDisplaySecuredBinder",{extend:"Ext.ux.binder.AbstractFormFieldBinder",metaDataName:"displaySecured",applyMetaData:function(n,t){n.inputEl&&n.inputEl.dom&&(t===!0?(n.__originalInputElType=n.inputEl.dom.type,n.inputEl.dom.type="password"):t===!1&&n.__originalInputElType&&n.inputEl.dom.type==="password"&&(n.inputEl.dom.type=n.__originalInputElType))},isApplicable:function(n){var t=this;return t.callParent(arguments)&&n instanceof Ext.form.field.Text}});Ext.define("Ext.ux.binder.TextFieldMaskReBinder",{extend:"Ext.ux.binder.AbstractFormFieldBinder",metaDataName:"maskRe",applyMetaData:function(n,t){var i=this;t!==null&&t!==undefined&&n.setMaskRe(t)},isApplicable:function(n){var t=this;return t.callParent(arguments)&&n instanceof Ext.form.field.Text}});Ext.define("Ext.ux.binder.TextFieldMaxLengthBinder",{extend:"Ext.ux.binder.AbstractFormFieldBinder",metaDataName:"maxLength",applyMetaData:function(n,t){var i=this;t!==null&&t!==undefined&&n.setMaxLength(t)},isApplicable:function(n){var t=this;return t.callParent(arguments)&&n instanceof Ext.form.field.Text}});Ext.defineInterface("IGridMetaDataBinder",{inherit:"ISingleton",methods:["onInit","onDestroy","onRender"]});Ext.define("Ext.ux.binder.GridDesiredBinder",{implement:"IGridMetaDataBinder",desiredCellCls:"desiredGridCell",onInit:function(){},onDestroy:function(){},onRender:function(n,t){var i=n.column.dataIndex;t.getMetaValue(i,"desired")&&!t.getMetaValue(i,"readOnly")&&(n.tdCls+=" "+this.desiredCellCls)}});Ext.define("Ext.ux.binder.GridReadOnlyBinder",{implement:"IGridMetaDataBinder",onInit:function(n){var t=this;n.on("beforeedit",t.onBeforeCellEdit)},onDestroy:function(n){var t=this;n.un("beforeedit",t.onBeforeCellEdit)},onRender:function(){},onBeforeCellEdit:function(n,t){return!t.record.getMetaValue(t.column.dataIndex,"readOnly")}});Ext.define("Ext.ux.binder.GridRequiredBinder",{implement:"IGridMetaDataBinder",requiredCellCls:"requiredGridCell",onInit:function(){},onDestroy:function(){},onRender:function(n,t){var i=n.column.dataIndex;t.getMetaValue(i,"required")&&!t.getMetaValue(i,"readOnly")&&(n.tdCls+=" "+this.requiredCellCls)}});Ext.define("Ext.ux.binder.GridValidationBinder",{implement:"IGridMetaDataBinder",invalidCellCls:"invalidGridCell",onInit:function(){},onDestroy:function(){},onRender:function(n,t){var r=n.column.validationDataIndex||n.column.dataIndex,i=t.getMetaValue(r,"validationErrorMessages");i.length?(n.tdCls+=" "+this.invalidCellCls,n.tdAttr='data-errorqtip="'+i.join("<\/br>")+'"'):n.tdAttr='data-errorqtip=""'}});